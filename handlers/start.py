import logging
from aiogram import Router, types
from aiogram.filters import Command
from utils.keyboards import Keyboards
from utils.helpers import MessageHelper

router = Router()
logger = logging.getLogger(__name__)

@router.message(Command("start"))
async def start_handler(message: types.Message, user=None, is_admin: bool = False, **kwargs):
    """Handle /start command"""
    user_id = message.from_user.id if message.from_user else 0
    first_name = message.from_user.first_name if message.from_user else "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    logger.info(f"Start command from user {user_id}")
    
    welcome_text = (
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–æ—Ç –æ–±—É—á–µ–Ω–∏—è, {first_name}!\n\n"
        "üéØ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:\n"
        "‚Ä¢ üìö –ò–∑—É—á–∞—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π\n"
        "‚Ä¢ üîç –ò—Å–∫–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã\n"
        "‚Ä¢ üìù –ü—Ä–æ—Ö–æ–¥–∏—Ç—å —Ç–µ—Å—Ç—ã\n"
        "‚Ä¢ üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å\n\n"
    )
    
    if is_admin:
        welcome_text += "‚öôÔ∏è –ö–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —É –≤–∞—Å —Ç–∞–∫–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\n\n"
    
    welcome_text += "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:"
    
    await message.answer(
        text=welcome_text,
        reply_markup=Keyboards.main_menu(is_admin=is_admin)
    )

@router.callback_query(lambda c: c.data == "main_menu")
async def main_menu_callback(query: types.CallbackQuery, user=None, is_admin: bool = False, **kwargs):
    """Handle main menu callback"""
    text = (
        "üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"
    )
    
    await MessageHelper.safe_edit_message(
        query,
        text=text,
        reply_markup=Keyboards.main_menu(is_admin=is_admin),
        parse_mode="Markdown"
    )

@router.callback_query(lambda c: c.data == "cancel")
async def cancel_callback(query: types.CallbackQuery, **kwargs):
    """Handle cancel callback"""
    await MessageHelper.safe_answer_callback(query, "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    
    # Return to main menu
    await main_menu_callback(query, **kwargs)

@router.callback_query(lambda c: c.data == "noop")
async def noop_callback(query: types.CallbackQuery, **kwargs):
    """Handle no-operation callback"""
    await MessageHelper.safe_answer_callback(query)
